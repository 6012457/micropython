from pyb import Pin, Timer, ExtInt, UART, Servo, ADCimport timeimport mathvd = ADC(Pin(Pin.cpu.A2))servo = Servo(4)servo.angle(45)in11 = Pin(Pin.cpu.C4, Pin.OUT)in12 = Pin(Pin.cpu.A4, Pin.OUT)p1 = Pin(Pin.cpu.B3)t2 = Timer(2, freq=1000)t2c2 = t2.channel(2, Timer.PWM, pin=p1)t2c2.pulse_width_percent(20)in21 = Pin(Pin.cpu.B9, Pin.OUT)in22 = Pin(Pin.cpu.B0, Pin.OUT)p2 = Pin(Pin.cpu.B15)  # A1 has TIM5, CH1t8 = Timer(8, freq=1000)t8c3 = t8.channel(3, Timer.PWM, pin=p2)t8c3.pulse_width_percent(20)lv = 0rv = 0d = 20f2b = 0servo_center = servo_curr = 45def back():    global f2b    in11.value(1)    in12.value(0)    in21.value(0)    in22.value(1)    f2b = -1def forward():    global f2b    in11.value(0)    in12.value(1)    in21.value(1)    in22.value(0)    f2b = 1def stop():    in11.value(1)    in12.value(1)    in21.value(1)    in22.value(1)def run():    global  lv    global  rv    global  d    global  f2b    global  servo_curr    if servo_curr <30:        servo_curr =30    if servo_curr>80:        servo_curr=80    dat =servo_center- servo_curr    angle = 2 * dat    a = math.pi / 180    T = 140    L = 152    s = T / (2 * L)    datv=int(s*math.tan(a*angle)*d)    print("datv",datv)    print("f2b",f2b)    lv=d-datv*f2b    rv=d+datv*f2b    print("curr:%d,d:%d,lv:%d,rv:%d" %(servo_curr,d,lv,rv))    servo.angle(servo_curr)    t2c2.pulse_width_percent(lv)    t8c3.pulse_width_percent(rv)def null():    passdef add():    global d    d=d+10    if (d > 100):        d = 100    if (d<20):        d=20    print ("d:",d)    lv=d    rv=100-d    t2c2.pulse_width_percent(lv)    t8c3.pulse_width_percent(rv)def dec():    global d    d=d-10    if (d > 100):        d = 100    if (d<20):        d=20    print ("d:",d)    lv=d    rv=100-d    t2c2.pulse_width_percent(lv)    t8c3.pulse_width_percent(rv)def turnleft():    global  servo_curr    servo_curr=servo_curr-2    run()def turnright():    global servo_curr    servo_curr=servo_curr+2    run()def cadd():    global  servo_curr    global  servo_center    servo_curr=servo_curr+1    servo_center=servo_curr    servo.angle(servo_center)def cdec():    global  servo_curr    global  servo_center    servo_curr=servo_curr-1    servo_center=servo_curr    servo.angle(servo_center)